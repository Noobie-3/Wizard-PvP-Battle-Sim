//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Project_Files/Input/InputSystem_Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem_Actions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem_Actions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem_Actions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""99d678be-7832-4b1b-8284-5b12eadc2dea"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""80d726a1-c93f-4c9b-beb4-7038db0b86c7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""40de297c-6f4d-457e-a216-5814b5b33597"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cast"",
                    ""type"": ""Button"",
                    ""id"": ""4fdc28da-71e6-4304-8e0d-28696f2c1509"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeSpellKeyBoard"",
                    ""type"": ""Button"",
                    ""id"": ""97f1ab70-a0da-4ffe-b762-8b3721db48ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeSpellMouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""6420ba1d-8920-49f8-bc0b-16bf87df7d43"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""cdd0ed00-f3f5-4f92-b60c-7a8a5db3783b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChargeMana"",
                    ""type"": ""Button"",
                    ""id"": ""1cced997-b16e-4352-a91c-b522eeba3229"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CancelSpell_Dash"",
                    ""type"": ""Button"",
                    ""id"": ""7f138805-4659-4696-a481-b4c96ce30ad8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2570f912-f4db-4a1b-9edd-60df58c2b69c"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5242a3c-98a3-42ca-bf26-ac9a29204cdd"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""953a8e33-c492-47fb-8192-bf25f6ef442c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""09ec8295-a945-474f-bc0d-9321aca0d3f5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4d274bf5-f6e8-4bad-b7f2-fe79d351e666"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2c9004bc-bb70-4233-88fb-a778dd0cf1ca"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8e575df8-3998-4e40-b1ed-3449b049487a"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6f023f08-23b6-42ce-8d82-cb9f46e02acf"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b9d3a51b-2170-4acd-b41c-77bdbc5ac0d0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fb5585a1-5a99-4939-bd94-85215b8df93c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19ff8e30-bae7-4033-a158-6320c207a8a4"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""755f79f9-c57f-404a-a6f3-814a64f2db59"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeSpellKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3de13a3a-5db5-463d-80c7-f9a9e59d78b0"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeSpellKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9cea0d4-dd9f-4564-9edb-08393b8c8ab7"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeSpellKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9951a90f-e0a0-438d-8719-e87e3e0b069f"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeSpellMouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2466feb6-b44c-49cc-8148-d3ea98ab3a56"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeSpellMouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db81d0cd-8408-44ec-89d2-5017de458153"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65587858-c835-4d97-b6de-7bf1e70b5e83"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5344a61-6327-4ce3-aa38-22b3db7049b8"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChargeMana"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e96f8973-a20a-4fe6-b659-6949415fa7ec"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelSpell_Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a2b9dab-f11d-4d87-9fa4-a7f9acf6e5b4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelSpell_Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Cast = m_Player.FindAction("Cast", throwIfNotFound: true);
        m_Player_ChangeSpellKeyBoard = m_Player.FindAction("ChangeSpellKeyBoard", throwIfNotFound: true);
        m_Player_ChangeSpellMouseScroll = m_Player.FindAction("ChangeSpellMouseScroll", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_ChargeMana = m_Player.FindAction("ChargeMana", throwIfNotFound: true);
        m_Player_CancelSpell_Dash = m_Player.FindAction("CancelSpell_Dash", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Cast;
    private readonly InputAction m_Player_ChangeSpellKeyBoard;
    private readonly InputAction m_Player_ChangeSpellMouseScroll;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_ChargeMana;
    private readonly InputAction m_Player_CancelSpell_Dash;
    public struct PlayerActions
    {
        private @InputSystem_Actions m_Wrapper;
        public PlayerActions(@InputSystem_Actions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Cast => m_Wrapper.m_Player_Cast;
        public InputAction @ChangeSpellKeyBoard => m_Wrapper.m_Player_ChangeSpellKeyBoard;
        public InputAction @ChangeSpellMouseScroll => m_Wrapper.m_Player_ChangeSpellMouseScroll;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @ChargeMana => m_Wrapper.m_Player_ChargeMana;
        public InputAction @CancelSpell_Dash => m_Wrapper.m_Player_CancelSpell_Dash;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Cast.started += instance.OnCast;
            @Cast.performed += instance.OnCast;
            @Cast.canceled += instance.OnCast;
            @ChangeSpellKeyBoard.started += instance.OnChangeSpellKeyBoard;
            @ChangeSpellKeyBoard.performed += instance.OnChangeSpellKeyBoard;
            @ChangeSpellKeyBoard.canceled += instance.OnChangeSpellKeyBoard;
            @ChangeSpellMouseScroll.started += instance.OnChangeSpellMouseScroll;
            @ChangeSpellMouseScroll.performed += instance.OnChangeSpellMouseScroll;
            @ChangeSpellMouseScroll.canceled += instance.OnChangeSpellMouseScroll;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @ChargeMana.started += instance.OnChargeMana;
            @ChargeMana.performed += instance.OnChargeMana;
            @ChargeMana.canceled += instance.OnChargeMana;
            @CancelSpell_Dash.started += instance.OnCancelSpell_Dash;
            @CancelSpell_Dash.performed += instance.OnCancelSpell_Dash;
            @CancelSpell_Dash.canceled += instance.OnCancelSpell_Dash;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Cast.started -= instance.OnCast;
            @Cast.performed -= instance.OnCast;
            @Cast.canceled -= instance.OnCast;
            @ChangeSpellKeyBoard.started -= instance.OnChangeSpellKeyBoard;
            @ChangeSpellKeyBoard.performed -= instance.OnChangeSpellKeyBoard;
            @ChangeSpellKeyBoard.canceled -= instance.OnChangeSpellKeyBoard;
            @ChangeSpellMouseScroll.started -= instance.OnChangeSpellMouseScroll;
            @ChangeSpellMouseScroll.performed -= instance.OnChangeSpellMouseScroll;
            @ChangeSpellMouseScroll.canceled -= instance.OnChangeSpellMouseScroll;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @ChargeMana.started -= instance.OnChargeMana;
            @ChargeMana.performed -= instance.OnChargeMana;
            @ChargeMana.canceled -= instance.OnChargeMana;
            @CancelSpell_Dash.started -= instance.OnCancelSpell_Dash;
            @CancelSpell_Dash.performed -= instance.OnCancelSpell_Dash;
            @CancelSpell_Dash.canceled -= instance.OnCancelSpell_Dash;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnCast(InputAction.CallbackContext context);
        void OnChangeSpellKeyBoard(InputAction.CallbackContext context);
        void OnChangeSpellMouseScroll(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnChargeMana(InputAction.CallbackContext context);
        void OnCancelSpell_Dash(InputAction.CallbackContext context);
    }
}